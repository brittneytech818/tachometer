{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;GASG;AAQH,MAAM,UAAU,GAAoB,EAAE,CAAC;AAEvC,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,IAAY,EAAE,GAAkB,EAAE,EAAE;IAC5D,UAAU,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC,CAAC;AACzC,CAAC,CAAC;AAEF,MAAM,aAAa,GAAG,KAAK,IAAI,EAAE;IAC/B,OAAO,CAAC,GAAG,CAAC,WAAW,UAAU,CAAC,MAAM,aAAa,CAAC,CAAC;IACvD,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE;QAClC,0CAA0C;QAC1C,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;QAChC,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC;QAC/B,IAAI,MAAM,IAAI,OAAQ,MAAc,CAAC,IAAI,KAAK,UAAU,EAAE;YACxD,MAAM,MAAM,CAAC;SACd;QACD,MAAM,GAAG,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;QAC9B,MAAM,OAAO,GAAG,GAAG,GAAG,KAAK,CAAC;QAC5B,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC9B;IACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QACzB,IAAI,EAAE,QAAQ;QACd,EAAE;QACF,UAAU,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACjC,IAAI,EAAE,CAAC,CAAC,IAAI;YACZ,IAAI,EAAE,CAAC,CAAC,IAAI;SACb,CAAC,CAAC;KACJ,CAAC,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,SAAS,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC9D,MAAM,EAAE,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAE/B,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,OAAQ,CAAC,CAAC;AACxC,IAAI,MAAkB,CAAC;AAEvB,IAAI;IACF,MAAM,GAAG,IAAI,SAAS,CAAC,QAAQ,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC;CAClD;AAAC,OAAO,KAAK,EAAE;IACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;CACtB;AAED,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,GAAG,EAAE;IACnC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC,CAAC,CAAC,CAAC;IACjD,aAAa,EAAE,CAAC;AAClB,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;IACzC,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,KAAK,EAAE,EAAE;IAC3C,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt The complete set of authors may be found\n * at http://polymer.github.io/AUTHORS.txt The complete set of contributors may\n * be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by\n * Google as part of the polymer project is also subject to an additional IP\n * rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\ninterface BenchmarkInfo {\n  name: string;\n  run(): unknown;\n  runs: number[];\n}\n\nconst benchmarks: BenchmarkInfo[] = [];\n\nexport const benchmark = (name: string, run: () => unknown) => {\n  benchmarks.push({name, run, runs: []});\n};\n\nconst runBenchmarks = async () => {\n  console.log(`Running ${benchmarks.length} benchmarks`);\n  for (const benchmark of benchmarks) {\n    // TODO: run each benchmark multiple times\n    const start = performance.now();\n    const result = benchmark.run();\n    if (result && typeof (result as any).then === 'function') {\n      await result;\n    }\n    const end = performance.now();\n    const runtime = end - start;\n    benchmark.runs.push(runtime);\n  }\n  socket.send(JSON.stringify({\n    type: 'result',\n    id,\n    benchmarks: benchmarks.map((b) => ({\n      name: b.name,\n      runs: b.runs,\n    }))\n  }));\n};\n\nconst urlParams = new URLSearchParams(window.location.search);\nconst id = urlParams.get('id');\n\nconst base = new URL(document.baseURI!);\nlet socket!: WebSocket;\n\ntry {\n  socket = new WebSocket(`ws://${base.host}/test`);\n} catch (error) {\n  console.error(error);\n}\n\nsocket.addEventListener('open', () => {\n  console.log('Control socket opened');\n  socket.send(JSON.stringify({type: 'start', id}));\n  runBenchmarks();\n});\n\nsocket.addEventListener('close', (event) => {\n  console.log('Control socket closed', event.code);\n});\n\nsocket.addEventListener('message', (event) => {\n  console.log('Message from server ', event.data);\n});\n\n"]}